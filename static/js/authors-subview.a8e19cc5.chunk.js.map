{"version":3,"sources":["components/CardStyle/GalleryMovie.module.css","components/MovieDetailsPage/MovieDetailsPage.module.css","components/Cast/Cast.module.css","components/Reviews/Reviews.module.css","components/views/NotFoundView.jsx","components/services/popularMovieApi.js","components/views/HomePage.jsx","components/services/searchMovieApi.js","components/views/MoviesPage.jsx","components/services/detailsMovieApi.js","components/views/MovieDetailsPage.jsx","components/services/castMovieApi.js","components/Cast/Cast.jsx","components/services/ReviewsApi.js","components/Reviews/Reviews.jsx"],"names":["module","exports","NotFoundView","api","fetchMovie","fetch","then","response","ok","json","Promise","reject","Error","HomePage","useState","movieTrend","setMovieTrendState","useEffect","movieApi","movieElem","results","catch","error","console","log","className","styles","container","movie_list","map","movie","movie_item","image","src","poster_path","alt","title","width","link","id","to","apiSearch","fetchSearchMovie","searchName","Movies","searchMovie","setSearchMovie","setSearchName","searchNameSubmit","setSearchNameSubmit","reset","searchMovieApi","searchForm","onSubmit","e","preventDefault","trim","toast","type","form_button","button_input","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","toLowerCase","original_title","apiSearchId","fetchMovieId","movie_id","Cast","lazy","Reviews","MoviesDetailsPage","movieId","useParams","movieDetails","setMovieDetails","detailsMovieApi","text_overviews","overview","text","vote_average","list","genres","genre","name","production_countries","country","link_box","fallback","path","element","apiCasts","fetchCastMovie","movieCast","setMovieCast","castMovieApi","cast","item","profile_path","apiReviews","fetchReviewsMovie","movieReviews","setMovieReviews","reviewsMovieApi","author","content"],"mappings":"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","file":"static/js/authors-subview.a8e19cc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GalleryMovie_container__3cbeg\",\"movie_list\":\"GalleryMovie_movie_list__17slk\",\"movie_item\":\"GalleryMovie_movie_item__20aOB\",\"image\":\"GalleryMovie_image__1rg_2\",\"link\":\"GalleryMovie_link__2OU38\",\"searchForm\":\"GalleryMovie_searchForm__19ZMT\",\"form_button\":\"GalleryMovie_form_button__1Qq50\",\"button_label\":\"GalleryMovie_button_label__2LUb9\",\"button_input\":\"GalleryMovie_button_input__3WzF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetailsPage_container__1EoPS\",\"text\":\"MovieDetailsPage_text__LdC_x\",\"text_overviews\":\"MovieDetailsPage_text_overviews__2JHnq\",\"list\":\"MovieDetailsPage_list__2nAWh\",\"link_box\":\"MovieDetailsPage_link_box__3Ahv0\",\"link\":\"MovieDetailsPage_link__37Uoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cast_container__3TdCx\",\"list\":\"Cast_list__KqiS5\",\"item\":\"Cast_item__1Tjsl\",\"image\":\"Cast_image__3RsO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Reviews_container__2QGrj\"};","export default function NotFoundView() {\r\n  return <h1>404 Страница не найдена :</h1>;\r\n};\r\n","const API_KEY = \"6d4973a2d0c01fe46093180d1e3091a8\";\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\n\r\nfunction fetchMovie () {\r\n  return fetch(`${BASE_URL}trending/all/week?api_key=${API_KEY}`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    };\r\n    return Promise.reject(new Error(`Нет изображения с именем `));\r\n  });\r\n};\r\n\r\nconst api = {\r\n  fetchMovie,\r\n};\r\n\r\nexport default api;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport movieApi from \"../services/popularMovieApi\";\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../CardStyle/GalleryMovie.module.css';\r\n\r\n\r\n\r\nexport default function HomePage() {\r\n    const [movieTrend, setMovieTrendState] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        movieApi\r\n            .fetchMovie()\r\n            .then((movieElem) => setMovieTrendState(movieElem.results) )\r\n            .catch((error) => console.log(error));\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n            {movieTrend && <ul className={styles.movie_list}>\r\n                {movieTrend.map((movie) => {\r\n                    return (\r\n                        <li key={movie.id} className={styles.movie_item}>\r\n                            <img className={styles.image} src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} width='200'/>\r\n                        <Link className={styles.link} id={movie.id} to={`/movies${movie.id}`} >{movie.title} </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>}\r\n        </section>\r\n    );\r\n};\r\n","const API_KEY = \"6d4973a2d0c01fe46093180d1e3091a8\";\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\n\r\nfunction fetchSearchMovie (searchName) {\r\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchName}&language=en-US&page=1&include_adult=false`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    };\r\n    return Promise.reject(new Error(`Нет фильма с именем `));\r\n  });\r\n};\r\n\r\nconst apiSearch = {\r\n  fetchSearchMovie,\r\n};\r\n\r\nexport default apiSearch;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport searchMovieApi from \"../services/searchMovieApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport styles from '../CardStyle/GalleryMovie.module.css';\r\n\r\n\r\n\r\nexport default function Movies() {\r\n    const [searchMovie, setSearchMovie] = useState(null);\r\n    const [searchName, setSearchName] = useState('');\r\n    const [searchNameSubmit, setSearchNameSubmit] = useState('');\r\n    \r\n    const handleClick = (event) => {\r\n    const value = event.currentTarget.value.toLowerCase();\r\n    setSearchName(() => value);\r\n    };\r\n\r\n    const handleSubmite = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchName.trim() === \"\") {\r\n      toast(\"Input name for search movies\");\r\n      return;\r\n        };\r\nsetSearchNameSubmit(searchName);\r\n    // onSubmit(searchName);\r\n    reset();\r\n    };\r\n\r\n\r\n    const reset = () => {\r\n    setSearchName(()=> '');\r\n    };\r\n    \r\n    useEffect(() => {\r\n        searchMovieApi\r\n            .fetchSearchMovie(searchNameSubmit)\r\n            .then((movieElem) => setSearchMovie(movieElem.results) )\r\n            .catch((error) => console.log(error));\r\n    }, [searchNameSubmit]);\r\n\r\n    \r\n    return (\r\n        <section className={styles.container}>\r\n         <form className={styles.searchForm} onSubmit={handleSubmite}>\r\n          <button type=\"submit\" className={styles.form_button}>Search\r\n          </button>\r\n\r\n          <input\r\n            className={styles.button_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n            value={searchName}\r\n            onChange={handleClick}\r\n          />\r\n            </form>\r\n\r\n\r\n            {searchMovie && <section >\r\n                <ul className={styles.movie_list}>\r\n                {searchMovie.map((movie) =>{\r\n                    return (\r\n                        <li key={movie.id} className={styles.movie_item}>\r\n                            <img className={styles.image} src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.original_title} width='200'/>\r\n                            <Link className={styles.link} id={movie.id} to={`/movies${movie.id}`} >{movie.original_title} </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n                </ul>\r\n            </section>}\r\n        </section>\r\n\r\n    );\r\n};\r\n","const API_KEY = \"6d4973a2d0c01fe46093180d1e3091a8\";\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nfunction fetchMovieId (movie_id) {\r\n  return fetch(`${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    };\r\n    return Promise.reject(new Error(`Нет фильма с именем `));\r\n  });\r\n};\r\n\r\nconst apiSearchId = {\r\n  fetchMovieId,\r\n};\r\n\r\nexport default apiSearchId;","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { useParams, Routes, Route, Link } from 'react-router-dom';\r\nimport detailsMovieApi from \"../services/detailsMovieApi\";\r\nimport styles from '../MovieDetailsPage/MovieDetailsPage.module.css';\r\n\r\nconst Cast = lazy(() =>\r\n  import('../Cast/Cast.jsx' /* webpackChunkName: \"authors-subview\"*/),\r\n);\r\nconst Reviews= lazy(() =>\r\n  import('../Reviews/Reviews.jsx' /* webpackChunkName: \"authors-subview\"*/),\r\n);\r\n\r\nexport default function MoviesDetailsPage () {\r\n    const {movieId} = useParams();\r\n    const [movieDetails, setMovieDetails] = useState(null);\r\n\r\n    useEffect(() => {\r\n        detailsMovieApi\r\n            .fetchMovieId(movieId)\r\n            .then((movieElem) => setMovieDetails(movieElem) )\r\n            .catch((error) => console.log(error));\r\n    }, [movieId]);\r\n\r\n  return (\r\n      <>\r\n          {movieDetails && ( <section className={styles.container}>\r\n        <h2>{movieDetails.title}</h2>\r\n         <img className={styles.image} src={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`} alt={movieDetails.title} width='200'/>\r\n        \r\n        <p className={styles.text_overviews}>{movieDetails.overview}</p>\r\n        <p className={styles.text}>Rating : {movieDetails.vote_average}</p>\r\n        <ul className={styles.list}>Genres: {movieDetails.genres.map((genre) => <li key={genre.id} className={styles.text}>{genre.name}</li>)}\r\n        </ul>\r\n        <ul className={styles.list}>Countries: {movieDetails.production_countries.map((country) =>\r\n          <li key={country.id} className={styles.text}>{country.name}</li>)}\r\n        </ul>\r\n        <div className={styles.link_box}>\r\n          <Link className={styles.link} to={`cast`} >Cast</Link>\r\n          <Link className={styles.link} to={`reviews`} >Reviws</Link>\r\n        </div>\r\n          </section>\r\n          )\r\n          }\r\n    <Suspense fallback={<h1>Loading ...</h1>}>\r\n        <Routes>\r\n        <Route path='cast' element={<Cast  />} />\r\n        <Route path='reviews' element={ < Reviews />}/>\r\n        </Routes>\r\n        </Suspense>\r\n      </>\r\n  )\r\n};\r\n\r\n","const API_KEY = \"6d4973a2d0c01fe46093180d1e3091a8\";\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nfunction fetchCastMovie(movie_id) {\r\n  return fetch(`${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    };\r\n    return Promise.reject(new Error(`Нет фильма с именем `));\r\n  });\r\n};\r\n\r\nconst apiCasts = {\r\n  fetchCastMovie,\r\n};\r\n\r\nexport default apiCasts;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams} from 'react-router-dom';\r\nimport castMovieApi from \"../services/castMovieApi\";\r\nimport styles from './Cast.module.css';\r\n\r\nexport default function Cast() {\r\n    const { movieId } = useParams();\r\n    const [movieCast, setMovieCast] = useState(null);\r\n \r\n    useEffect(() => {\r\n        castMovieApi\r\n            .fetchCastMovie(movieId)\r\n            .then((movieElem) => setMovieCast(movieElem.cast))\r\n            .catch((error) => console.log(error));\r\n    }, [movieId]);\r\n\r\n\r\n        return (\r\n            <section className={styles.container}>\r\n                {movieCast && <ul className={styles.list}>\r\n                {movieCast.map((movie) =>{\r\n                    return (\r\n                        <li key={movie.id} className={styles.item}>\r\n                            <img className={styles.image} src={`https://image.tmdb.org/t/p/original/${movie.profile_path}`} alt={movie.name} width='50'/>\r\n                            <p className={styles.text}>{movie.name}</p>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>}\r\n            </section>\r\n        )\r\n\r\n}","const API_KEY = \"6d4973a2d0c01fe46093180d1e3091a8\";\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nfunction fetchReviewsMovie(movie_id) {\r\n  return fetch(`${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&page=1`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    };\r\n    return Promise.reject(new Error(`Нет фильма с именем `));\r\n  });\r\n};\r\n\r\nconst apiReviews = {\r\n  fetchReviewsMovie,\r\n};\r\n\r\nexport default apiReviews;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams} from 'react-router-dom';\r\nimport reviewsMovieApi from \"../services/ReviewsApi\";\r\nimport styles from './Reviews.module.css'\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [movieReviews, setMovieReviews] = useState(null);\r\n \r\n    useEffect(() => {\r\n        reviewsMovieApi\r\n            .fetchReviewsMovie(movieId)\r\n            .then((movieElem) => setMovieReviews(movieElem.results))\r\n            .catch((error) => console.log(error));\r\n    }, [movieId]);\r\n\r\n\r\n        return (\r\n            <section className={styles.container}>\r\n                {movieReviews && <ul>\r\n                {movieReviews.map((movie) =>{\r\n                    return (\r\n                        <li key={movie.id} >\r\n                            {movie.author}\r\n                            <p>{movie.content}</p>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>}\r\n            </section>\r\n        )\r\n\r\n}"],"sourceRoot":""}